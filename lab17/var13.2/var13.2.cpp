#include <iostream>
using namespace std;

void MatrixCheck(int**matrix,int size)//функция для проверки элементов матрицы
{
	int min = matrix[0][0];//создание переменной для инимального элемента
	for (int i = 0; i < size; i++) {//цикл в цикле для проверки каждого элемента и вычисления минимального
		for (int j = 0; j < size; j++) {
			if (matrix[i][j] < min) {
				min = matrix[i][j];
			}
		}
	}
	cout << "Минимальный элемент матрицы:" << min << endl;//вывод минимального элемента
	for (int i = 0; i < size; i++) {//цикл в цикле для проверки главной диагонали матрицы
		for (int j = 0; j < size; j++) {
			if (i == j) {//если элемент на главной диагонали
				if (matrix[i][j] == min) {//есди элемент равен минимальному
					cout << "Значение " << matrix[i][j] << "находится на позиции (" << i + 1 << ";" << j + 1 <<")"<< endl;//вывод согласно условию
				}
			}
		}
	}
}

void main()//главная функция
{
	setlocale(LC_ALL, "Russian");//локализация консоли
	int size;//ввод размера матрицы
	cout << "Введите размер квадратной матрицы:";
	cin >> size;
	int** matrix;//создание указателя на область памяти с матрицей
	matrix = new int* [size];//выделение динамической памяти под матрицу
	for (int i = 0; i < size; i++) {//цикл в цикле для ввода элементов матрицы
		matrix[i] = new int[size];//выделение динамической памяти под строку
		for (int j = 0; j < size; j++) {
			cout << "Введите элемент матрицы:";
			cin >> matrix[i][j];//ввод элемента матрицы
		}
	}
	cout << "Получившаяся матрица:" << endl;
	for (int i = 0; i < size; i++) {//цикл в цикле для вывода получившейся матрицы
		for (int j = 0; j < size; j++) {
			cout << matrix[i][j] << ' ';
		}
		cout << "\n";
	}
	MatrixCheck(matrix, size);//использование вышеописанной функции
	for (int i = 0; i < size; i++) {//цикл для очистки динамической памяти под строки
		delete[]matrix[i];
	}
	delete[]matrix;//очистка динамической памяти под матрицу
}