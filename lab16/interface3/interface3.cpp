#include <iostream>
#include <string>
#include <Windows.h>
using namespace std;


void OperationsWithMassive(double* massive, int size)//функция для реалищации условия
{
	double* min = massive;//создание указателя на минимальный элемент массива
	int position_of_min;//создание переменной для хранения позиции минимального элемента в массиве
	for (int i = 0; i < size; i++) {//цикл для вычисления минимадьного элемента
		if (abs(*(massive + i)) < abs(*min)) {
			min = (massive + i);
			position_of_min = i;
		}
	}
	cout << "Минимальный по модулю элемент массива:" << *min << endl;//вывод минимального по модулю элемента массива
	cout << "Позиция минимального элемента:" << position_of_min + 1 << endl;//вывод позиции такого элемента
	int position_of_first_negative;//создание переменной жля хранения позиции первого отрицательного элемента
	for (int i = 0; i < size; i++) {//цикл для вычисления позиции такого элемента
		if (massive[i] < 0) {
			position_of_first_negative = i;//присвоение переменной номера элемента
			break;//выход из цикла
		}
	}
	int sum = 0;//создание переменной для подсчёта суммы элементов после первого отрицательного
	for (int i = position_of_first_negative + 1; i < size; i++) {//цикл для вычисления этой суммы
		sum += abs(massive[i]);
	}
	cout << "Сумма модулей элементов после первого отрицательного:" << sum;//вывод суммы
}

void CheckSentence(string sentence)//функция для проверки вхождения слова в предложение
{
	string check_word = "БГТУ";//строка , содержащая искомое слово
	int sent_length = sentence.length();//вычисление длины исходног предложения
	string tmp[100];//создание массива для добавления только слов из введённого предложения
	int tmp_length = 0;//создание счётной переменной для вычисления длины массива слов
	for (int i = 0; i < sent_length; i++) {//цикл для ввода только слов в массив
		if (sentence[i] != ' ') {//если не пробел
			tmp[tmp_length] += sentence[i];//добавить символы слова последовательно
		}
		else {//елси проьел
			tmp_length++;//увеличение счётной переменной на 1
		}
	}
	int control_var = 0;//создание контрольной переменной для проверки вхождения искомого слова в предложение
	for (int i = 0; i <= tmp_length; i++) {//цикл для проверки вхождения искомого слова в предложение 
		if (tmp[i] == check_word) {//если одно из слов равно искомому
			cout << "Во введённом предложении есть слово БГТУ";//вывод, что такое слово есть
			control_var++;//увеличение контрольной переменной на 1
			break;//выход из цикла
		}
	}
	if (control_var == 0) {//елсди контроьная переменная равна нулю
		cout << "Во введённом предложении нет слова БГТУ";//вывести , что слова нет в предложении
	}
}

void main()
{
	setlocale(LC_ALL, "Russian");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	cout << "Первая часть:" << endl;
	int size;//ввод размерности массива
	cout << "Введите размерность массива:";
	cin >> size;
	cin.ignore(cin.rdbuf()->in_avail());//очистка буфера после ввода 
	double* massive;//создание указателя на область памяти для массива
	massive = new double[size];//выделение динамической памяти под массив
	for (int i = 0; i < size; i++) {//цикл для ввода элементов массива
		cout << "Введите элемент массива:";
		cin >> massive[i];
	}
	cin.ignore(cin.rdbuf()->in_avail());
	cout << "Вторая часть:" << endl;
	string sentence;//ввод предложения с клавиатуры
	cout << "Введите предложение:";
	getline(cin, sentence);
	cin.ignore(cin.rdbuf()->in_avail());//очистка буфера после ввода предложения

	int sw;
	cout << "Выберите вариант использования программы:\n\t1-В массиве вещественных чисел вычеслить номер минимального по модулю элемента и вывести сумму модулей элементов ,\n\t стоящих после первого отрицательного.\n\t2-Проверить,есть ли во введённом предложении слово БГТУ." << endl;
	cin >> sw;
	cin.ignore(cin.rdbuf()->in_avail());//очистка буфера после ввода 
	switch (sw) {
	case 1:OperationsWithMassive(massive, size); break;//первый вариант
	case 2:CheckSentence(sentence); break;//второй вариант
	}

	delete[]massive;//очистка динамической памяти
}